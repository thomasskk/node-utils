import*as e from"htmlparser2";import t from"fs";import r from"stream";import n from"util";import s from"child_process";const o="_parent",a=e=>{const t=e.trim(),r=t.toLowerCase();return"true"===r||"false"!==r&&t},c=t=>{let r={},n="";const s=new e.Parser({onopentag:(e,t)=>{const s=(e=>{const t={};for(const r of Object.keys(e))t[r]=a(e[r]?.trim());return t})(t);n=e;const c=Object.keys(s).length>0,i=c?s:{};r[e]?(Array.isArray(r[e])||(r[e]=[r[e]]),c&&r[e].push(i)):r[e]=i,i[o]=r,r=i},ontext:e=>{if(0===Object.keys(r).length)return;if(!e.trim())return;const t=a(e),s="boolean"==typeof t?t:(e=>e.split("\n").map((e=>e.trim())).join(""))(e),c=r[o];Object.keys(c[n]).length>1&&!Array.isArray(c[n])&&(c[n]=[r]),Array.isArray(c[n])?c[n].push(s):c[n]=s},onclosetag:()=>{const e=r[o];delete r[o],r=e}},{xmlMode:!0});return s.write(t),s.end(),r},i="[object process]"===Object.prototype.toString.call("undefined"!=typeof process?process:0),f=2,l=4,u=8,p=1,y=1,h=2,g=2,m=4,b=4,d=4,A=8,k=e=>{let t=0;return t=null!==e&&"object"==typeof e?(e=>{let t=0;try{let r=e;switch(!0){case e instanceof Map:r=Object.fromEntries(e);break;case e instanceof Set:r=Array.from(e);break;case e instanceof Int8Array:return e.length*p;case e instanceof Uint8Array||e instanceof Uint8ClampedArray:return e.length*y;case e instanceof Int16Array:return e.length*h;case e instanceof Uint16Array:return e.length*g;case e instanceof Int32Array:return e.length*m;case e instanceof Uint32Array:return e.length*b;case e instanceof Float32Array:return e.length*d;case e instanceof Float64Array:return e.length*A}const n=JSON.stringify(r);t=Buffer.from(n).byteLength}catch(e){return console.error("Error detected, return -1",e),-1}return t})(e):(e=>{const t=[],r=[e];let n=0;for(;r.length;){const e=r.pop();switch(typeof e){case"boolean":n+=l;break;case"string":n+=""===(s=e)?4:Buffer.from(s).byteLength;break;case"number":n+=u;break;case"symbol":n+=(e.toString().length-8)*f;break;case"bigint":n+=Buffer.from(String(e)).byteLength;break;case"function":n+=e.toString().length;break;case"object":if(-1===t.indexOf(e)){t.push(e);for(const t in e)r.push(e[t])}}}var s;return n})(e),(e=>{let t=0;for(;e>=1e3&&++t;)e/=1e3;return`${e.toFixed(e<10&&t>0?1:0)} ${["Bytes","KB","MB","GB"][t]}`})(t)},j=(e,t)=>e in t,w=async e=>{const{url:n,dest:s}=e;try{const e=await fetch(n);if(!e.body)return{error:"No body in response",success:!1};const o=r.Readable.fromWeb(e.body),a=t.createWriteStream(s);return await r.promises.finished(o.pipe(a)),{success:!0}}catch(e){return{error:O(e),success:!1}}},O=e=>"object"==typeof e&&null!==e&&"message"in e&&"string"==typeof e.message?e.message:"Unknown error",B=async e=>{try{return(await t.promises.stat(e)).isDirectory()}catch(e){return!1}},S=async(e,t={})=>{const{log:r=!0}=t,o=n.promisify(s.exec)(e),a=o.child;r&&(a.stdout?.pipe(process.stdout),a.stderr?.pipe(process.stdout)),await o},x=(e,t)=>e.reduce(((e,r)=>(e[e.length-1].length===t&&e.push([]),e[e.length-1].push(r),e)),[[]]);export{x as chunk,w as download,S as execAsync,O as getErrorMessage,B as isDir,i as isNodeEnv,k as sizeof,j as valueInObj,c as xml2js};
